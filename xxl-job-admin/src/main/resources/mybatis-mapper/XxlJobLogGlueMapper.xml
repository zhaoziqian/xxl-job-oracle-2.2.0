<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxl.job.admin.dao.XxlJobLogGlueDao">
    <resultMap id="XxlJobLogGlue" type="com.xxl.job.admin.core.model.XxlJobLogGlue">
        <result column="id" property="id"/>
        <result column="job_id" property="jobId"/>
        <result column="glue_type" property="glueType"/>
        <result column="glue_source" property="glueSource"/>
        <result column="glue_remark" property="glueRemark"/>
        <result column="add_time" property="addTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <sql id="Base_Column_List">
        T.ID,
        T.JOB_ID,
        T.GLUE_TYPE,
        T.GLUE_SOURCE,
        T.GLUE_REMARK,
        T.ADD_TIME,
        T.UPDATE_TIME
    </sql>

    <insert id="save" parameterType="com.xxl.job.admin.core.model.XxlJobLogGlue" useGeneratedKeys="true"
            keyProperty="id">
        <selectKey resultType="java.lang.Integer" order="BEFORE" keyProperty="id">
            SELECT SEQ_XXL_JOB_LOGGLUE.NEXTVAL AS ID
            FROM DUAL
        </selectKey>
        INSERT INTO XXL_JOB_LOGGLUE (ID,
                                     JOB_ID,
                                     GLUE_TYPE,
                                     GLUE_SOURCE,
                                     GLUE_REMARK,
                                     ADD_TIME,
                                     UPDATE_TIME)
        VALUES (#{id,jdbcType=DECIMAL},
                #{jobId,jdbcType=DECIMAL},
                #{glueType,jdbcType=VARCHAR},
                #{glueSource,jdbcType=CLOB},
                #{glueRemark,jdbcType=VARCHAR},
                #{addTime,jdbcType=TIMESTAMP},
                #{updateTime,jdbcType=TIMESTAMP})
    </insert>

    <select id="findByJobId" parameterType="java.lang.Integer" resultMap="XxlJobLogGlue">
        SELECT
        <include refid="Base_Column_List"/>
        FROM XXL_JOB_LOGGLUE T
        WHERE T.JOB_ID = #{jobId}
        ORDER BY ID DESC
    </select>

    <delete id="removeOld">
        DELETE
        FROM XXL_JOB_LOGGLUE
        WHERE ID NOT IN (
                SELECT ID
                FROM (
                             SELECT TTT.ID
                             FROM (
                                          SELECT ID, ROWNUM RU
                                          FROM XXL_JOB_LOGGLUE
                                          WHERE JOB_ID = #{jobId}
                                          ORDER BY UPDATE_TIME DESC
                                          ) TTT
                             WHERE TTT.RU &lt;= #{limit}
                             ) T1
                )
          AND JOB_ID = #{jobId}
    </delete>

    <delete id="deleteByJobId" parameterType="java.lang.Integer">
        DELETE
        FROM XXL_JOB_LOGGLUE
        WHERE JOB_ID = #{jobId}
    </delete>
</mapper>